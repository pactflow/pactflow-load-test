config:
  target: 'http://localhost'
  phases:
    - duration: 30
      arrivalRate: 10
      name: "Maintain 10 concurrent scenarios for 60s"
  http:
    tls:
      rejectUnauthorized: true
  environments:
    dev:
      target: "http://localhost"
  variables:
    ui:
      - "/"
      - "/?tags=true"
      - "/matrix"
      - "/"
    api:
      - "/pacticipants"
      - "/dashboard"
      - "/pacticipants/"
  payload:
    -
      path: "./fixtures/accounts-{{ $environment }}.csv"
      fields:
        - "host"
        - "authorization"
    -
      path: "./fixtures/pacticipants.csv"
      fields:
        - "consumer"
        - "provider"

  processor: "./src/load-test-functions.js"

scenarios:
  # Scenario: Find a random provider, navigate to their latest pacts and select a random pact
  - name: Test provider verification
    weight: 4
    flow:
    - get:
        url: "/pacts/provider/{{provider}}"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"
        capture:
          json: "$['_links']['pb:pacts'][(@.rand())]['href']"
          as: "rel"
    - log: "Have pact: {{rel}}"
    - get:
        url: "{{rel}}"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"
        capture:
          json: "$['_links']['pb:publish-verification-results']['href']"
          as: "rel"
    - log: "Sending POST verification results to {{rel}}"
    - post:
        url: "{{rel}}"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"
          Content-Type: "application/json"
          Accept: "*/*"
        json:
          success: true
          providerApplicationVersion: "4.5.6"
          buildUrl: "http://my-ci.org/build/3456"

  # Perform a GET on a randomised resource
  - name: Test API queries
    weight: 1
    flow:
    - get:
        url: "{{ api }}"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"

  # Create a webhook for a random provider
  - name: Create webhook
    weight: 1
    flow:
    - get:
        url: "/"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"
        capture:
          json: "$['_links']['pb:webhooks']['href']"
          as: "rel"
    - log: "Have webhook URL: {{rel}}"
    - post:
        url: "{{rel}}"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"
          Content-Type: "application/json"
          Accept: "*/*"
        json:
          provider:
            name: "{{provider}}"
          events:
            - name: "contract_content_changed"
          request:
            method: "POST"
            url: "https://some-secure-host"

  # UI
  - name: Tests interactions via the UI
    weight: 1
    flow:
    - get:
        url: "{{ ui }}"
        headers:
          Host: "{{ host }}"
          Authorization: "{{ authorization }}"
          Accept: "text/html"

  # API publishing and retrieval
  # This will publish to one of different consumer/provider pairs _per virtual user_ (each version should be different)
  # and then tag them with 'dev' and 'prod'
  - name: Publish pacts
    weight: 3
    flow:
      - log: "Creating pact for between {{consumer}}<->{{provider}} on broker {{host}}"
      - put:
          url: "/pacts/provider/{{provider}}/consumer/{{consumer}}/version/{{version}}"
          beforeRequest: "setupPactPublish"
          headers:
            Host: "{{ host }}"
            Authorization: "{{ authorization }}"
            Content-Type: "application/json"
      - get:
          url: "/pacts/provider/{{provider}}/consumer/{{consumer}}/version/{{version}}"
          headers:
            Host: "{{ host }}"
            Authorization: "{{ authorization }}"
            Accept: "application/json"
      - put:
          url: "/pacticipants/{{consumer}}/versions/{{version}}/tags/prod"
          headers:
            Host: "{{ host }}"
            Authorization: "{{ authorization }}"
            Content-Type: "application/json"